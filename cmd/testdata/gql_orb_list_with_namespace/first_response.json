{
  "data": {
    "registryNamespace": {
      "name": "circleci",
      "orbs": {
        "edges": [
          {
            "cursor": "circleci/aws-cli",
            "node": {
              "versions": [],
              "name": "circleci/aws-cli"
            }
          },
          {
            "cursor": "circleci/aws-code-deploy",
            "node": {
              "versions": [],
              "name": "circleci/aws-code-deploy"
            }
          },
          {
            "cursor": "circleci/aws-s3",
            "node": {
              "versions": [],
              "name": "circleci/aws-s3"
            }
          },
          {
            "cursor": "circleci/circleci-cli",
            "node": {
              "versions": [],
              "name": "circleci/circleci-cli"
            }
          },
          {
            "cursor": "circleci/codecov-clojure",
            "node": {
              "versions": [
                {
                  "source": "{}",
                  "version": "0.0.3"
                },
                {
                  "source": "description: provides a job for reporting code coverage of clojure projects to codecov\ncommands:\n  upload:\n    parameters:\n      path:\n        description: Path to the code coverage data file to upload.\n        type: string\n    steps:\n    - run:\n        name: Upload Coverage Results\n        command: |\n          curl --request POST --retry 3 --silent --show-error --fail --data-binary @<< parameters.path >> \\\n          \"https://codecov.io/upload/v2?service=circleci\\\n          &token=$CODECOV_TOKEN\\\n          &commit=$CIRCLE_SHA1\\\n          &branch=$CIRCLE_BRANCH\\\n          &build=$CIRCLE_BUILD_NUM\\\n          &job=$CIRCLE_NODE_INDEX\\\n          &build_url=$CIRCLE_BUILD_URL\\\n          &slug=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME\\\n          &pr=$CIRCLE_PR_NUMBER\"\njobs:\n  code-coverage:\n    parameters:\n      coverage-file:\n        description: the path to coverage.json\n        type: string\n        default: target/coverage/codecov.json\n      cache-key:\n        description: cache key to use, if this is likely to share cache with another job. currently only supports one key.\n        type: string\n        default: code-coverage-{{ checksum \"project.clj\" }}\n      circlecitest:\n        description: tests are run with the circleci.test test runner instead of clojure.test\n        type: boolean\n        default: false\n    docker:\n    - image: circleci/clojure\n    steps:\n    - checkout\n    - restore_cache:\n        keys:\n        - << parameters.cache-key >>\n    - run: lein cloverage --codecov <<# parameters.circlecitest >> --runner circleci.test <</ parameters.circlecitest >>\n    - save_cache:\n        paths:\n        - ~/.m2\n        - ~/.lein\n        key: << parameters.cache-key >>\n    - store_artifacts:\n        path: target/coverage\n    - upload:\n        path: << parameters.coverage-file >>\n",
                  "version": "0.0.2"
                }
              ],
              "name": "circleci/codecov-clojure"
            }
          }
        ],
        "totalCount": 10,
        "pageInfo": {
          "hasNextPage": true
        }
      }
    }
  }
}

version: 2.1

orbs:
  codecov: circleci/codecov-clojure@0.0.2

executors:
  go:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/CircleCI-Public/circleci-cli

jobs:
  test:
    executor: go
    steps:
      - checkout
      - run: make test
  coverage:
    executor: go
    steps:
      - checkout
      - run: make cover
      - store_artifacts:
          path: ./coverage.txt
          destination: coverage.txt
      - codecov/upload:
          path: coverage.txt
  docs:
    executor: go
    steps:
      - checkout
      - run: sudo apt-get install pandoc
      - run: go run main.go usage
      - store_artifacts:
          path: ./docs
          destination: docs
      - run: ./.circleci/generate-docs.sh
      - run: ./.circleci/deploy-gh-pages.sh

  lint:
    docker:
      # TODO: use this image once it updates latest gometalinter
      #- image: supinf/gometalinter:latest
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/CircleCI-Public/circleci-cli
    environment:
      CGO_ENABLED: 0
    steps:
      - checkout
      - run: make dev
      - run: gometalinter ./...

  deploy:
    executor: go
    environment:
      GORELEASER_URL: https://github.com/goreleaser/goreleaser/releases/download/v0.77.1/goreleaser_amd64.deb
    steps:
      - checkout
      - restore_cache:
          keys: [v2-goreleaser-]
      - run:
          name: Install GoReleaser
          command: |
            [ -f ~/goreleaser_amd64.db ] || curl --silent --location --fail --retry 3 $GORELEASER_URL > ~/goreleaser_amd64.deb
            sudo apt install ~/goreleaser_amd64.deb
      - run:
          name: Tag Repo
          command: |
            git config --global user.email $GH_EMAIL
            git config --global user.name $GH_NAME
            git tag -a      "v0.1.$CIRCLE_BUILD_NUM" -m "Release v0.1.$CIRCLE_BUILD_NUM"
            git push origin "v0.1.$CIRCLE_BUILD_NUM"
      - run:
          name: Release
          command: goreleaser
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: |
            docker build -t circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM .
            docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
            docker push     circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM
      - save_cache:
          key: v2-goreleaser-{{ checksum "~/goreleaser_amd64.deb" }}
          paths: [~/goreleaser_amd64.deb]
      - persist_to_workspace:
          root: .
          paths:
            - "dist"
      - store_artifacts:
          path: ./dist
          destination: dist

  snap:
    docker:
      - image: cibuilds/snapcraft:stable
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          export TAG=$(./dist/linux_amd64/circleci version)
          sed -i -- "s/%CLI_VERSION_PLACEHOLDER%/$TAG/g" snapcraft.yaml
      - run: snapcraft
      - run:
          name: Publish to store
          command: |
            mkdir .snapcraft
            echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
            snapcraft push dist/*.snap --release stable

  shellcheck:
    docker:
      - image: nlknguyen/alpine-shellcheck:v0.4.6
    steps:
      - checkout
      - run:
          name: Check Scripts
          command: |
            find . -type f -name '*.sh' -not -path './vendor/*' > /tmp/files.txt
            echo "Checking $(cat /tmp/files.txt | wc -l ) files"
            cat /tmp/files.txt | xargs -t shellcheck --external-sources

workflows:
  version: 2
  ci:
    jobs:
      - shellcheck
      - test
      - coverage
      - lint
      - docs:
          requires:
            - deploy
      - snap:
          requires:
            - deploy
      - deploy:
          requires:
            - test
            - coverage
            - lint
            - shellcheck
          filters:
            branches:
              only: master
